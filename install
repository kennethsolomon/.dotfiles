#!/usr/bin/env sh

DOTFILES="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# .ssh
if [ ! -d "$HOME/.ssh" ]; then
  echo "Creating .ssh folder..."
  mkdir $HOME/.ssh
else
  echo ".ssh folder already exist..."
fi
ln -sf $DOTFILES/.ssh/config $HOME/.ssh/config

# aliases
ln -sf $DOTFILES/aliases/.aliases $HOME/.aliases

# zshrc
ln -sf $DOTFILES/zsh/zshrc $HOME/.zshrc

# fzf
ln -sf $DOTFILES/fzf/.fzf.zsh $HOME/.fzf.zsh

# kitty
ln -s $DOTFILES/kitty $HOME/.config/

# tmux
ln -sf $DOTFILES/scripts/t $HOME/.local/bin/t
mkdir $HOME/.tmux
ln -sf $DOTFILES/tmux/.tmux.conf $HOME/.tmux.conf
ln -sf $DOTFILES/tmux/plugins $HOME/.tmux

# nvim
if [ ! -d "$HOME/.config/nvim" ]; then
  echo "Proceed with creating a symlink with nvim..."
else
  echo "nvim folder already exist, backing up..."
  mv $HOME/.config/nvim $HOME/.config/nvim.bak
  rm -rf $HOME/.config/nvim # Make sure to remove the old folder
  echo "Proceed with creating a symlink with nvim..."
fi

ln -sf "$DOTFILES/nvim" "$HOME/.config/nvim"

# Install NVM if not installed
if [ ! -d "$HOME/.nvm" ]; then
  echo "Installing NVM..."
  curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
else
  echo "NVM is already installed."
fi

ln -sf $DOTFILES/nvm/default-packages $HOME/.nvm/default-packages

# Load NVM (needed for further commands)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Install latest LTS Node.js version (automatically installs `default-packages`)
nvm install --lts
nvm use --lts
nvm alias default node

echo "NVM and global packages setup complete!"

# gssh -T git@bitbucket.orgit
# Get the first available GPG signing key
SIGNING_KEY=$(gpg --list-secret-keys --keyid-format=long | grep -Eo 'rsa[0-9]+/[A-F0-9]+' | cut -d'/' -f2 | head -n1)

# Set up Git config dynamically
git config --global init.defaultbranch main
git config --global user.name "Kenneth Solomon"
git config --global user.email "hello@kennethsolomon.com"
git config --global credential.useHttpPath true
git config --global gpg.program "/opt/homebrew/bin/gpg"

# Only set signing key if one is found
if [ -n "$SIGNING_KEY" ]; then
  git config --global user.signingkey "$SIGNING_KEY"
  git config --global commit.gpgsign true
  echo "✅ Git signing key set: $SIGNING_KEY"
else
  echo "⚠️ No GPG signing key found! Skipping commit signing setup."
fi

# gitignore
ln -sf $DOTFILES/git/gitignore_global $HOME/.gitignore_global

# gitconfig
ln -sf $DOTFILES/git/gitconfig $HOME/.gitconfig

# karabiner
rm -rf $HOME/.config/karabiner
mkdir $HOME/.config/karabiner
ln -sf $DOTFILES/karabiner/karabiner.json $HOME/.config/karabiner

# yabai | need to install first the yabai and skhd
rm -rf $HOME/.config/yabai
mkdir $HOME/.config/yabai
ln -sf $DOTFILES/yabai/yabairc $HOME/.config/yabai

rm -rf $HOME/.config/skhd
mkdir $HOME/.config/skhd
ln -sf $DOTFILES/skhd/skhdrc $HOME/.config/skhd

# sketchybar
rm -rf $HOME/.config/sketchybar
ln -sf $DOTFILES/sketchybar $HOME/.config/sketchybar

# yazi
if [ ! -d "$HOME/.config/yazi" ]; then
  echo "Proceed with creating a symlink with yazi..."
else
  echo "yazi folder already exist, backing up..."
  mv $HOME/.config/yazi $HOME/.config/yazi.bak
  rm -rf $HOME/.config/yazi # Make sure to remove the old folder
  echo "Proceed with creating a symlink with yazi..."
fi

ln -sf "$DOTFILES/yazi" "$HOME/.config/yazi"

# neofetch
rm -rf $HOME/.config/neofetch
ln -sf $DOTFILES/neofetch $HOME/.config/neofetch

echo "Please unzip tmux theme"

if [ ! -d "$HOME/fzf-git.sh" ]; then
  echo "Proceed with creating a symlink with fzf-git.sh..."
  mkdir $HOME/fzf-git.sh
  ln -sf $DOTFILES/fzf/fzf-git.sh $HOME/fzf-git.sh
else
  echo "fzf-git.sh folder already exist, deleting..."
  rm $HOME/fzf-git.sh
  mkdir $HOME/fzf-git.sh
  ln -sf $DOTFILES/fzf/fzf-git.sh $HOME/fzf-git.sh
  echo "Proceed with creating a symlink with fzf-git.sh..."
fi
